{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROGRAMACAO\\\\node\\\\teste\\\\teste\\\\client\\\\src\\\\pages\\\\login.js\";\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as yup from \"yup\";\nimport Button from 'react-bootstrap/Button';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst handleClickLogin = values => {\n  Axios.post(\"http://localhost:3001/register\", {\n    email: values.email,\n    password: values.password\n  }).then(response => {\n    console.log(response);\n  });\n};\n\nconst validationLogin = yup.object().shape({\n  email: yup.string().email(\"Este email não é válido\").required(\"Este campo é obrigatorio\"),\n  password: yup.string().min(8, 'Necessário 8 caracteres').required(\"Este campo é obrigatorio\")\n});\n\nconst Login = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {},\n    onSubmit: handleClickLogin,\n    validationSchema: validationLogin,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          className: \"form-field\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          component: \"span\",\n          name: \"email\",\n          className: \"form-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          className: \"form-field\",\n          placeholder: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          component: \"span\",\n          name: \"password\",\n          className: \"form-error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"button\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 5\n}, this);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","yup","Button","Axios","handleClickLogin","values","post","email","password","then","response","console","log","validationLogin","object","shape","string","required","min","Login"],"sources":["D:/PROGRAMACAO/node/teste/teste/client/src/pages/login.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Axios from \"axios\";\r\n\r\nconst handleClickLogin = (values) => {\r\n    Axios.post(\"http://localhost:3001/register\", {\r\n        email: values.email,\r\n        password: values.password,\r\n    }).then((response) => {\r\n        console.log(response);\r\n    });\r\n};\r\n\r\n\r\nconst validationLogin = yup.object().shape({\r\n    email: yup.string().email(\"Este email não é válido\").required(\"Este campo é obrigatorio\"),\r\n    password: yup.string().min(8,'Necessário 8 caracteres').required(\"Este campo é obrigatorio\")\r\n});\r\n\r\nconst Login = () => (\r\n\r\n    \r\n\r\n    <div>\r\n        <h1>Login</h1>\r\n        <Formik\r\n        initialValues={{}}\r\n        onSubmit={handleClickLogin}\r\n        validationSchema={validationLogin}\r\n        >\r\n            <Form className=\"login-form\">\r\n                <div className=\"login-form-group\">\r\n                    <Field name=\"email\" className=\"form-field\" placeholder=\"Email\" />\r\n                    <ErrorMessage\r\n                    component=\"span\"\r\n                    name=\"email\"\r\n                    className=\"form-error\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"login-form-group\">\r\n                    <Field name=\"password\" className=\"form-field\" placeholder=\"Senha\" />\r\n                    <ErrorMessage\r\n                    component=\"span\"\r\n                    name=\"password\"\r\n                    className=\"form-error\"\r\n                    />\r\n                </div>\r\n                <Button variant=\"primary\" className=\"button\" type=\"submit\">Login</Button>\r\n            </Form>\r\n        </Formik>\r\n        {/*  */}\r\n    </div>\r\n)\r\n\r\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,YAA7B,QAAgD,QAAhD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,gBAAgB,GAAIC,MAAD,IAAY;EACjCF,KAAK,CAACG,IAAN,CAAW,gCAAX,EAA6C;IACzCC,KAAK,EAAEF,MAAM,CAACE,KAD2B;IAEzCC,QAAQ,EAAEH,MAAM,CAACG;EAFwB,CAA7C,EAGGC,IAHH,CAGSC,QAAD,IAAc;IAClBC,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACH,CALD;AAMH,CAPD;;AAUA,MAAMG,eAAe,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;EACvCR,KAAK,EAAEN,GAAG,CAACe,MAAJ,GAAaT,KAAb,CAAmB,yBAAnB,EAA8CU,QAA9C,CAAuD,0BAAvD,CADgC;EAEvCT,QAAQ,EAAEP,GAAG,CAACe,MAAJ,GAAaE,GAAb,CAAiB,CAAjB,EAAmB,yBAAnB,EAA8CD,QAA9C,CAAuD,0BAAvD;AAF6B,CAAnB,CAAxB;;AAKA,MAAME,KAAK,GAAG,mBAIV;EAAA,wBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,eAEI,QAAC,MAAD;IACA,aAAa,EAAE,EADf;IAEA,QAAQ,EAAEf,gBAFV;IAGA,gBAAgB,EAAES,eAHlB;IAAA,uBAKI,QAAC,IAAD;MAAM,SAAS,EAAC,YAAhB;MAAA,wBACI;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,OAAZ;UAAoB,SAAS,EAAC,YAA9B;UAA2C,WAAW,EAAC;QAAvD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UACA,SAAS,EAAC,MADV;UAEA,IAAI,EAAC,OAFL;UAGA,SAAS,EAAC;QAHV;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI;QAAK,SAAS,EAAC,kBAAf;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAC,UAAZ;UAAuB,SAAS,EAAC,YAAjC;UAA8C,WAAW,EAAC;QAA1D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,YAAD;UACA,SAAS,EAAC,MADV;UAEA,IAAI,EAAC,UAFL;UAGA,SAAS,EAAC;QAHV;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ,eAkBI,QAAC,MAAD;QAAQ,OAAO,EAAC,SAAhB;QAA0B,SAAS,EAAC,QAApC;QAA6C,IAAI,EAAC,QAAlD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EALJ;IAAA;IAAA;IAAA;EAAA,QAFJ;AAAA;EAAA;EAAA;EAAA;AAAA,QAJJ;;KAAMM,K;AAoCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}